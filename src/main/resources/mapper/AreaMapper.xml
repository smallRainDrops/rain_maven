<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.crudproject.dao.AreaMapper">
    <resultMap id="BaseResultMap" type="com.example.crudproject.entity.Area">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="AREANAME" jdbcType="VARCHAR" property="areaname"/>
        <result column="AREANAME_PY" jdbcType="VARCHAR" property="areanamePy"/>
        <result column="PID" jdbcType="INTEGER" property="pid"/>
        <result column="ROWNUMBER" jdbcType="INTEGER" property="rownumber"/>
        <result column="CNAME" jdbcType="VARCHAR" property="cname"/>
        <result column="CDATE" jdbcType="DATE" property="cdate"/>
        <result column="UNAME" jdbcType="VARCHAR" property="uname"/>
        <result column="UDATE" jdbcType="DATE" property="udate"/>
        <result column="STATUS" jdbcType="VARCHAR" property="status"/>
        <result column="NOTE" jdbcType="VARCHAR" property="note"/>
        <result column="LEVEL" jdbcType="INTEGER" property="level"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        ID, AREANAME, AREANAME_PY, PID, ROWNUMBER, CNAME, CDATE, UNAME, UDATE, STATUS, NOTE,
        LEVEL
    </sql>
    <select id="selectByExample" parameterType="com.example.crudproject.entity.AreaExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from area
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from area
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from area
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.crudproject.entity.AreaExample">
        delete from area
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.crudproject.entity.Area">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into area (AREANAME, AREANAME_PY, PID,
        ROWNUMBER, CNAME, CDATE,
        UNAME, UDATE, STATUS,
        NOTE, LEVEL)
        values (#{areaname,jdbcType=VARCHAR}, #{areanamePy,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER},
        #{rownumber,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, #{cdate,jdbcType=DATE},
        #{uname,jdbcType=VARCHAR}, #{udate,jdbcType=DATE}, #{status,jdbcType=VARCHAR},
        #{note,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.example.crudproject.entity.Area">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into area
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="areaname != null">
                AREANAME,
            </if>
            <if test="areanamePy != null">
                AREANAME_PY,
            </if>
            <if test="pid != null">
                PID,
            </if>
            <if test="rownumber != null">
                ROWNUMBER,
            </if>
            <if test="cname != null">
                CNAME,
            </if>
            <if test="cdate != null">
                CDATE,
            </if>
            <if test="uname != null">
                UNAME,
            </if>
            <if test="udate != null">
                UDATE,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="note != null">
                NOTE,
            </if>
            <if test="level != null">
                LEVEL,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="areaname != null">
                #{areaname,jdbcType=VARCHAR},
            </if>
            <if test="areanamePy != null">
                #{areanamePy,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="rownumber != null">
                #{rownumber,jdbcType=INTEGER},
            </if>
            <if test="cname != null">
                #{cname,jdbcType=VARCHAR},
            </if>
            <if test="cdate != null">
                #{cdate,jdbcType=DATE},
            </if>
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
            <if test="udate != null">
                #{udate,jdbcType=DATE},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="note != null">
                #{note,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.crudproject.entity.AreaExample" resultType="java.lang.Long">
        select count(*) from area
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update area
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.areaname != null">
                AREANAME = #{record.areaname,jdbcType=VARCHAR},
            </if>
            <if test="record.areanamePy != null">
                AREANAME_PY = #{record.areanamePy,jdbcType=VARCHAR},
            </if>
            <if test="record.pid != null">
                PID = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.rownumber != null">
                ROWNUMBER = #{record.rownumber,jdbcType=INTEGER},
            </if>
            <if test="record.cname != null">
                CNAME = #{record.cname,jdbcType=VARCHAR},
            </if>
            <if test="record.cdate != null">
                CDATE = #{record.cdate,jdbcType=DATE},
            </if>
            <if test="record.uname != null">
                UNAME = #{record.uname,jdbcType=VARCHAR},
            </if>
            <if test="record.udate != null">
                UDATE = #{record.udate,jdbcType=DATE},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.note != null">
                NOTE = #{record.note,jdbcType=VARCHAR},
            </if>
            <if test="record.level != null">
                LEVEL = #{record.level,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update area
        set ID = #{record.id,jdbcType=INTEGER},
        AREANAME = #{record.areaname,jdbcType=VARCHAR},
        AREANAME_PY = #{record.areanamePy,jdbcType=VARCHAR},
        PID = #{record.pid,jdbcType=INTEGER},
        ROWNUMBER = #{record.rownumber,jdbcType=INTEGER},
        CNAME = #{record.cname,jdbcType=VARCHAR},
        CDATE = #{record.cdate,jdbcType=DATE},
        UNAME = #{record.uname,jdbcType=VARCHAR},
        UDATE = #{record.udate,jdbcType=DATE},
        STATUS = #{record.status,jdbcType=VARCHAR},
        NOTE = #{record.note,jdbcType=VARCHAR},
        LEVEL = #{record.level,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.crudproject.entity.Area">
        update area
        <set>
            <if test="areaname != null">
                AREANAME = #{areaname,jdbcType=VARCHAR},
            </if>
            <if test="areanamePy != null">
                AREANAME_PY = #{areanamePy,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                PID = #{pid,jdbcType=INTEGER},
            </if>
            <if test="rownumber != null">
                ROWNUMBER = #{rownumber,jdbcType=INTEGER},
            </if>
            <if test="cname != null">
                CNAME = #{cname,jdbcType=VARCHAR},
            </if>
            <if test="cdate != null">
                CDATE = #{cdate,jdbcType=DATE},
            </if>
            <if test="uname != null">
                UNAME = #{uname,jdbcType=VARCHAR},
            </if>
            <if test="udate != null">
                UDATE = #{udate,jdbcType=DATE},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=VARCHAR},
            </if>
            <if test="note != null">
                NOTE = #{note,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                LEVEL = #{level,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.crudproject.entity.Area">
        update area
        set AREANAME = #{areaname,jdbcType=VARCHAR},
        AREANAME_PY = #{areanamePy,jdbcType=VARCHAR},
        PID = #{pid,jdbcType=INTEGER},
        ROWNUMBER = #{rownumber,jdbcType=INTEGER},
        CNAME = #{cname,jdbcType=VARCHAR},
        CDATE = #{cdate,jdbcType=DATE},
        UNAME = #{uname,jdbcType=VARCHAR},
        UDATE = #{udate,jdbcType=DATE},
        STATUS = #{status,jdbcType=VARCHAR},
        NOTE = #{note,jdbcType=VARCHAR},
        LEVEL = #{level,jdbcType=INTEGER}
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <insert id="batchInsert" keyColumn="ID" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          @project https://github.com/itfsw/mybatis-generator-plugin
        -->
        insert into area
        (AREANAME, AREANAME_PY, PID, ROWNUMBER, CNAME, CDATE, UNAME, UDATE, STATUS, NOTE,
        LEVEL)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.areaname,jdbcType=VARCHAR}, #{item.areanamePy,jdbcType=VARCHAR}, #{item.pid,jdbcType=INTEGER},
            #{item.rownumber,jdbcType=INTEGER}, #{item.cname,jdbcType=VARCHAR}, #{item.cdate,jdbcType=DATE},
            #{item.uname,jdbcType=VARCHAR}, #{item.udate,jdbcType=DATE}, #{item.status,jdbcType=VARCHAR},
            #{item.note,jdbcType=VARCHAR}, #{item.level,jdbcType=INTEGER})
        </foreach>
    </insert>
    <insert id="batchInsertSelective" keyColumn="ID" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          @project https://github.com/itfsw/mybatis-generator-plugin
        -->
        insert into area (
        <foreach collection="selective" item="column" separator=",">
            ${column.value}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            <foreach collection="selective" item="column" separator=",">
                <if test="'AREANAME' == column.value">
                    #{item.areaname,jdbcType=VARCHAR}
                </if>
                <if test="'AREANAME_PY' == column.value">
                    #{item.areanamePy,jdbcType=VARCHAR}
                </if>
                <if test="'PID' == column.value">
                    #{item.pid,jdbcType=INTEGER}
                </if>
                <if test="'ROWNUMBER' == column.value">
                    #{item.rownumber,jdbcType=INTEGER}
                </if>
                <if test="'CNAME' == column.value">
                    #{item.cname,jdbcType=VARCHAR}
                </if>
                <if test="'CDATE' == column.value">
                    #{item.cdate,jdbcType=DATE}
                </if>
                <if test="'UNAME' == column.value">
                    #{item.uname,jdbcType=VARCHAR}
                </if>
                <if test="'UDATE' == column.value">
                    #{item.udate,jdbcType=DATE}
                </if>
                <if test="'STATUS' == column.value">
                    #{item.status,jdbcType=VARCHAR}
                </if>
                <if test="'NOTE' == column.value">
                    #{item.note,jdbcType=VARCHAR}
                </if>
                <if test="'LEVEL' == column.value">
                    #{item.level,jdbcType=INTEGER}
                </if>
            </foreach>
            )
        </foreach>
    </insert>
</mapper>